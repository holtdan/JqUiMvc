@using JqUiMvc.Models
@model VisitInfoViewModel
@{
    ViewBag.Title = ViewBag.TaskViewModel.CurrStep.Name;
}

@using (Html.BeginForm("VisitInfo", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", area = "" }))
{
    @Html.HiddenFor(model => model.VisitID)
    @Html.HiddenFor(model => model.SiteID)
    @Html.HiddenFor(model => model.VisitTypeID)
    @Html.HiddenFor(model => model.StartDate)
    @Html.HiddenFor(model => model.EndDate)
    @Html.HiddenFor(model => model.RoomID)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.EnumDropDownListFor(m => m.StepState, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VisitName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VisitName)
            @Html.ValidationMessageFor(model => model.VisitName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SiteID, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SiteID, Model.SiteSelList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SiteID)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VisitTypeID, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.VisitTypeID, Model.VisitTypeSelList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VisitTypeID)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsOffSite, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.IsOffSite, true, new { @class = "filter", id = "Offsite_true" })
            <label for="Offsite_true">Yes</label>
            @Html.RadioButtonFor(model => model.IsOffSite, false, new { @class = "filter", id = "Onsite_true" })
            <label for="Onsite_true">No</label>
            @Html.ValidationMessageFor(model => model.IsOffSite)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VisitLength, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.VisitLength, VisitInfoViewModel.VLength.Hourly, new { @class = "filter", id = "VisitLength_hourly" })
            <label for="VisitLength_hourly">Hourly</label>
            @Html.RadioButtonFor(model => model.VisitLength, VisitInfoViewModel.VLength.Full, new { @class = "filter", id = "VisitLength_full" })
            <label for="VisitLength_full">Full Day</label>
            @Html.RadioButtonFor(model => model.VisitLength, VisitInfoViewModel.VLength.Multi, new { @class = "filter", id = "VisitLength_multi" })
            <label for="VisitLength_multi">Multi-day</label>
            @Html.ValidationMessageFor(model => model.VisitLength)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumAttendees, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumAttendees)
            @Html.ValidationMessageFor(model => model.NumAttendees)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Date</label>
        <div class="col-md-10">
            <a class="btn btn-primary" id="selectDateBtn">
                @if (Model.StartDate == null)
                {
                    @:Select Date
                }
                else
                {
                    @Model.StartDate.Value.ToShortDateString()@:&nbsp;-&nbsp;@Model.EndDate.Value.ToShortDateString()
                }
            </a>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Time</label>
        <div class="col-md-10" id="selectedTime">
            @if (Model.StartDate != null)
            {
                @Model.StartDate.Value.ToShortTimeString()@:&nbsp;-&nbsp;@Model.EndDate.Value.ToShortTimeString()
            }
        </div>
    </div>
    @* if ! AcctMgr *@
    <div class="form-group">
        <label class="control-label col-md-2">Room(s)</label>
        <div class="col-md-10">
        </div>
    </div>
}
@section Scripts
{
    <script src="~/Scripts/BriefingEdge/BeCalendarDialogs.js"></script>
    <script type="text/javascript">
    $(function () {
        console.log("VisitInfo");
        ///////////////////////////////
        // User clicked Save & Continue
        //
        $(".beSaveAndContinue").click(function (e) {
            //e.stopPropagation();
            var valsd = $("#StartDate").val();
            $("form").submit();
            @*$.ajax({
                    url: "@Url.Action("VisitInfo", "Home")",
                    type: 'POST',
                dataType: "json",
                data: GetModel(),
                success: function (d) {
                    //$("#beViewHeaderMessage").text(d.message);
                    console.log(d);
                },
                error: function errorFunc(data) {
                    alert('error' + data.status);
                }
            });*@
        });
        $("#selectDateBtn").click(function (e) {
            //e.PreventDefault();
            e.stopPropagation();

            // Num Attendees
            var numAttsVal = $("#NumAttendees").val();

            if (isNaN(parseInt(numAttsVal, 10))) {
                alert("Please enter a valid number of attendees.")
                return;
            }
            var numAttsNum = parseInt(numAttsVal, 10);

            // Visit Length
            var calendarType = "";

            if ($("#VisitLength_hourly").is(":checked"))
                calendarType = "_Hourly";
            else if ($("#VisitLength_full").is(":checked"))
                calendarType = "_Full";
            else if ($("#VisitLength_multi").is(":checked"))
                calendarType = "_Multi";
            else {
                alert("Please select a Visit Length: Hourly, Full Day or Multi-Day.")
                return;
            }
            var calUrl = "@Url.Action("GetCalendar", "Home", new { area = "" })".replace("GetCalendar", "GetCalendar" + calendarType);

            ShowCalendarDialog(calUrl,
                function (startDate, endDate, roomID) {
                    var sDate = new Date(startDate);
                    var eDate = new Date(startDate);
                    $("#StartDate").val(sDate);
                    $("#EndDate").val(eDate);
                    $("#RoomID").val(roomID);

                    $("#selectDateBtn").text(sDate.toDateString() + " - " + eDate.toDateString())
                    $("#selectedTime").text(sDate.toTimeString() + " - " + eDate.toTimeString())
                });
        });
    });
    function GetModel() {
        var sd = $("#StartDate").val();

        var model = {
            "VisitID": $("#VisitID").val(),
            "SiteID": $("#SiteID").val(),
            "VisitTypeID": $("#VisitTypeID").val(),
            "StartDate": $("#StartDate").val(),
            "EndDate": $("#EndDate").val(),
            "RoomID": $("#RoomID").val()//,
            //"NumAttendees": $("#NumAttendees"),
            //"IsOffSite": $("#IsOffsite"),
            //"VisitLength": $("#VisitLength")
        };

        return model;
    }
    </script>
}
